// SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause)
//
// THIS FILE IS AUTOGENERATED BY CARGO-LIBBPF-GEN!

pub use self::imp::*;

#[allow(dead_code)]
#[allow(non_snake_case)]
#[allow(non_camel_case_types)]
#[allow(clippy::absolute_paths)]
#[allow(clippy::upper_case_acronyms)]
#[allow(clippy::zero_repeat_side_effects)]
#[warn(single_use_lifetimes)]
mod imp {
    #[allow(unused_imports)]
    use super::*;
    use libbpf_rs::libbpf_sys;
    use libbpf_rs::skel::OpenSkel;
    use libbpf_rs::skel::Skel;
    use libbpf_rs::skel::SkelBuilder;
    use libbpf_rs::AsRawLibbpf as _;
    use libbpf_rs::MapCore as _;
    fn build_skel_config(
    ) -> libbpf_rs::Result<libbpf_rs::__internal_skel::ObjectSkeletonConfig<'static>> {
        let mut builder = libbpf_rs::__internal_skel::ObjectSkeletonConfigBuilder::new(DATA);
        builder
            .name("portmirror_bpf")
            .map("mirror_map", false)
            .map("filter_map", false)
            .map("portmirr.rodata", true)
            .map(".rodata.str1.1", false)
            .prog("port_mirror");
        builder.build()
    }
    pub struct OpenPortmirrorMaps<'obj> {
        pub mirror_map: libbpf_rs::OpenMapMut<'obj>,
        pub filter_map: libbpf_rs::OpenMapMut<'obj>,
        pub rodata: libbpf_rs::OpenMapMut<'obj>,
        pub rodata_data: &'obj mut types::rodata,
        pub rodata_str1_1: libbpf_rs::OpenMapMut<'obj>,
        _phantom: std::marker::PhantomData<&'obj ()>,
    }

    impl<'obj> OpenPortmirrorMaps<'obj> {
        #[allow(unused_variables)]
        unsafe fn new(
            config: &libbpf_rs::__internal_skel::ObjectSkeletonConfig<'_>,
            object: &mut libbpf_rs::OpenObject,
        ) -> libbpf_rs::Result<Self> {
            let mut mirror_map = None;
            let mut filter_map = None;
            let mut rodata = None;
            let mut rodata_str1_1 = None;
            let object = unsafe {
                std::mem::transmute::<&mut libbpf_rs::OpenObject, &'obj mut libbpf_rs::OpenObject>(
                    object,
                )
            };
            #[allow(clippy::never_loop)]
            for map in object.maps_mut() {
                let name = map.name().to_str().ok_or_else(|| {
                    libbpf_rs::Error::from(std::io::Error::new(
                        std::io::ErrorKind::InvalidData,
                        "map has invalid name",
                    ))
                })?;
                #[allow(clippy::match_single_binding)]
                match name {
                    "mirror_map" => mirror_map = Some(map),
                    "filter_map" => filter_map = Some(map),
                    "portmirr.rodata" => rodata = Some(map),
                    ".rodata.str1.1" => rodata_str1_1 = Some(map),
                    _ => panic!("encountered unexpected map: `{name}`"),
                }
            }

            let slf = Self {
                mirror_map: mirror_map.expect("map `mirror_map` not present"),
                filter_map: filter_map.expect("map `filter_map` not present"),
                rodata: rodata.expect("map `rodata` not present"),
                rodata_data: unsafe {
                    config
                        .map_mmap_ptr(2)
                        .expect("BPF map `rodata` does not have mmap pointer")
                        .cast::<types::rodata>()
                        .as_mut()
                        .expect("BPF map `rodata` mmap pointer is NULL")
                },
                rodata_str1_1: rodata_str1_1.expect("map `rodata_str1_1` not present"),
                _phantom: std::marker::PhantomData,
            };
            Ok(slf)
        }
    }
    pub struct PortmirrorMaps<'obj> {
        pub mirror_map: libbpf_rs::MapMut<'obj>,
        pub filter_map: libbpf_rs::MapMut<'obj>,
        pub rodata: libbpf_rs::MapMut<'obj>,
        pub rodata_data: &'obj types::rodata,
        pub rodata_str1_1: libbpf_rs::MapMut<'obj>,
        _phantom: std::marker::PhantomData<&'obj ()>,
    }

    impl<'obj> PortmirrorMaps<'obj> {
        #[allow(unused_variables)]
        unsafe fn new(
            config: &libbpf_rs::__internal_skel::ObjectSkeletonConfig<'_>,
            object: &mut libbpf_rs::Object,
        ) -> libbpf_rs::Result<Self> {
            let mut mirror_map = None;
            let mut filter_map = None;
            let mut rodata = None;
            let mut rodata_str1_1 = None;
            let object = unsafe {
                std::mem::transmute::<&mut libbpf_rs::Object, &'obj mut libbpf_rs::Object>(object)
            };
            #[allow(clippy::never_loop)]
            for map in object.maps_mut() {
                let name = map.name().to_str().ok_or_else(|| {
                    libbpf_rs::Error::from(std::io::Error::new(
                        std::io::ErrorKind::InvalidData,
                        "map has invalid name",
                    ))
                })?;
                #[allow(clippy::match_single_binding)]
                match name {
                    "mirror_map" => mirror_map = Some(map),
                    "filter_map" => filter_map = Some(map),
                    "portmirr.rodata" => rodata = Some(map),
                    ".rodata.str1.1" => rodata_str1_1 = Some(map),
                    _ => panic!("encountered unexpected map: `{name}`"),
                }
            }

            let slf = Self {
                mirror_map: mirror_map.expect("map `mirror_map` not present"),
                filter_map: filter_map.expect("map `filter_map` not present"),
                rodata: rodata.expect("map `rodata` not present"),
                rodata_data: unsafe {
                    config
                        .map_mmap_ptr(2)
                        .expect("BPF map `rodata` does not have mmap pointer")
                        .cast::<types::rodata>()
                        .as_ref()
                        .expect("BPF map `rodata` mmap pointer is NULL")
                },
                rodata_str1_1: rodata_str1_1.expect("map `rodata_str1_1` not present"),
                _phantom: std::marker::PhantomData,
            };
            Ok(slf)
        }
    }
    pub struct OpenPortmirrorProgs<'obj> {
        pub port_mirror: libbpf_rs::OpenProgramMut<'obj>,
        _phantom: std::marker::PhantomData<&'obj ()>,
    }

    impl<'obj> OpenPortmirrorProgs<'obj> {
        unsafe fn new(object: &mut libbpf_rs::OpenObject) -> libbpf_rs::Result<Self> {
            let mut port_mirror = None;
            let object = unsafe {
                std::mem::transmute::<&mut libbpf_rs::OpenObject, &'obj mut libbpf_rs::OpenObject>(
                    object,
                )
            };
            for prog in object.progs_mut() {
                let name = prog.name().to_str().ok_or_else(|| {
                    libbpf_rs::Error::from(std::io::Error::new(
                        std::io::ErrorKind::InvalidData,
                        "prog has invalid name",
                    ))
                })?;
                match name {
                    "port_mirror" => port_mirror = Some(prog),
                    _ => panic!("encountered unexpected prog: `{name}`"),
                }
            }

            let slf = Self {
                port_mirror: port_mirror.expect("prog `port_mirror` not present"),
                _phantom: std::marker::PhantomData,
            };
            Ok(slf)
        }
    }
    pub struct PortmirrorProgs<'obj> {
        pub port_mirror: libbpf_rs::ProgramMut<'obj>,
        _phantom: std::marker::PhantomData<&'obj ()>,
    }

    impl<'obj> PortmirrorProgs<'obj> {
        #[allow(unused_variables)]
        fn new(open_progs: OpenPortmirrorProgs<'obj>) -> Self {
            Self {
                port_mirror: unsafe {
                    libbpf_rs::ProgramMut::new_mut(
                        open_progs.port_mirror.as_libbpf_object().as_mut(),
                    )
                },
                _phantom: std::marker::PhantomData,
            }
        }
    }
    struct OwnedRef<'obj, O> {
        object: Option<&'obj mut std::mem::MaybeUninit<O>>,
    }

    impl<'obj, O> OwnedRef<'obj, O> {
        /// # Safety
        /// The object has to be initialized.
        unsafe fn new(object: &'obj mut std::mem::MaybeUninit<O>) -> Self {
            Self {
                object: Some(object),
            }
        }

        fn as_ref(&self) -> &O {
            // SAFETY: As per the contract during construction, the
            //         object has to be initialized.
            unsafe { self.object.as_ref().unwrap().assume_init_ref() }
        }

        fn as_mut(&mut self) -> &mut O {
            // SAFETY: As per the contract during construction, the
            //         object has to be initialized.
            unsafe { self.object.as_mut().unwrap().assume_init_mut() }
        }

        fn take(mut self) -> &'obj mut std::mem::MaybeUninit<O> {
            self.object.take().unwrap()
        }
    }

    impl<O> Drop for OwnedRef<'_, O> {
        fn drop(&mut self) {
            if let Some(object) = &mut self.object {
                unsafe { object.assume_init_drop() }
            }
        }
    }

    #[derive(Default)]
    pub struct PortmirrorSkelBuilder {
        pub obj_builder: libbpf_rs::ObjectBuilder,
    }

    impl<'obj> PortmirrorSkelBuilder {
        fn open_opts_impl(
            self,
            open_opts: *const libbpf_sys::bpf_object_open_opts,
            object: &'obj mut std::mem::MaybeUninit<libbpf_rs::OpenObject>,
        ) -> libbpf_rs::Result<OpenPortmirrorSkel<'obj>> {
            let skel_config = build_skel_config()?;
            let skel_ptr = skel_config.as_libbpf_object();

            let ret =
                unsafe { libbpf_sys::bpf_object__open_skeleton(skel_ptr.as_ptr(), open_opts) };
            if ret != 0 {
                return Err(libbpf_rs::Error::from_raw_os_error(-ret));
            }

            // SAFETY: `skel_ptr` points to a valid object after the
            //         open call.
            let obj_ptr = unsafe { *skel_ptr.as_ref().obj };
            // SANITY: `bpf_object__open_skeleton` should have
            //         allocated the object.
            let obj_ptr = std::ptr::NonNull::new(obj_ptr).unwrap();
            // SAFETY: `obj_ptr` points to an opened object after
            //         skeleton open.
            let obj = unsafe { libbpf_rs::OpenObject::from_ptr(obj_ptr) };
            let _obj = object.write(obj);
            // SAFETY: We just wrote initialized data to `object`.
            let mut obj_ref = unsafe { OwnedRef::new(object) };

            #[allow(unused_mut)]
            let mut skel = OpenPortmirrorSkel {
                maps: unsafe { OpenPortmirrorMaps::new(&skel_config, obj_ref.as_mut())? },
                progs: unsafe { OpenPortmirrorProgs::new(obj_ref.as_mut())? },
                obj: obj_ref,
                // SAFETY: Our `struct_ops` type contains only pointers,
                //         which are allowed to be NULL.
                // TODO: Generate and use a `Default` representation
                //       instead, to cut down on unsafe code.
                struct_ops: unsafe { std::mem::zeroed() },
                skel_config,
            };

            Ok(skel)
        }
    }

    impl<'obj> SkelBuilder<'obj> for PortmirrorSkelBuilder {
        type Output = OpenPortmirrorSkel<'obj>;
        fn open(
            self,
            object: &'obj mut std::mem::MaybeUninit<libbpf_rs::OpenObject>,
        ) -> libbpf_rs::Result<OpenPortmirrorSkel<'obj>> {
            self.open_opts_impl(std::ptr::null(), object)
        }

        fn open_opts(
            self,
            open_opts: libbpf_sys::bpf_object_open_opts,
            object: &'obj mut std::mem::MaybeUninit<libbpf_rs::OpenObject>,
        ) -> libbpf_rs::Result<OpenPortmirrorSkel<'obj>> {
            self.open_opts_impl(&open_opts, object)
        }

        fn object_builder(&self) -> &libbpf_rs::ObjectBuilder {
            &self.obj_builder
        }
        fn object_builder_mut(&mut self) -> &mut libbpf_rs::ObjectBuilder {
            &mut self.obj_builder
        }
    }

    #[derive(Debug, Clone)]
    #[repr(C)]
    pub struct StructOps {}

    impl StructOps {}
    pub mod types {
        #[allow(unused_imports)]
        use super::*;
        #[derive(Debug, Copy, Clone)]
        #[repr(C)]
        pub struct __anon_1 {
            pub r#type: *mut [i32; 1],
            pub max_entries: *mut [i32; 1024],
            pub key: *mut u32,
            pub value: *mut u32,
        }
        impl Default for __anon_1 {
            fn default() -> Self {
                Self {
                    r#type: std::ptr::null_mut(),
                    max_entries: std::ptr::null_mut(),
                    key: std::ptr::null_mut(),
                    value: std::ptr::null_mut(),
                }
            }
        }
        #[derive(Debug, Default, Copy, Clone)]
        #[repr(C, packed)]
        pub struct flow_key {
            pub __anon_2: __anon_2,
            pub __anon_3: __anon_3,
            pub sport: u16,
            pub dport: u16,
            pub proto: u8,
            pub ip_version: u8,
        }
        #[derive(Copy, Clone)]
        #[repr(C)]
        pub union __anon_2 {
            pub saddr: u32,
            pub saddr6: [u32; 4],
        }
        impl std::fmt::Debug for __anon_2 {
            fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
                write!(f, "(???)")
            }
        }
        impl Default for __anon_2 {
            fn default() -> Self {
                Self {
                    saddr: u32::default(),
                }
            }
        }
        #[derive(Copy, Clone)]
        #[repr(C)]
        pub union __anon_3 {
            pub daddr: u32,
            pub daddr6: [u32; 4],
        }
        impl std::fmt::Debug for __anon_3 {
            fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
                write!(f, "(???)")
            }
        }
        impl Default for __anon_3 {
            fn default() -> Self {
                Self {
                    daddr: u32::default(),
                }
            }
        }
        #[derive(Debug, Copy, Clone)]
        #[repr(C)]
        pub struct __anon_4 {
            pub r#type: *mut [i32; 1],
            pub max_entries: *mut [i32; 1024],
            pub key: *mut flow_key,
            pub value: *mut u8,
        }
        impl Default for __anon_4 {
            fn default() -> Self {
                Self {
                    r#type: std::ptr::null_mut(),
                    max_entries: std::ptr::null_mut(),
                    key: std::ptr::null_mut(),
                    value: std::ptr::null_mut(),
                }
            }
        }
        #[derive(Debug, Default, Copy, Clone)]
        #[repr(C)]
        pub struct __sk_buff {
            pub len: u32,
            pub pkt_type: u32,
            pub mark: u32,
            pub queue_mapping: u32,
            pub protocol: u32,
            pub vlan_present: u32,
            pub vlan_tci: u32,
            pub vlan_proto: u32,
            pub priority: u32,
            pub ingress_ifindex: u32,
            pub ifindex: u32,
            pub tc_index: u32,
            pub cb: [u32; 5],
            pub hash: u32,
            pub tc_classid: u32,
            pub data: u32,
            pub data_end: u32,
            pub napi_id: u32,
            pub family: u32,
            pub remote_ip4: u32,
            pub local_ip4: u32,
            pub remote_ip6: [u32; 4],
            pub local_ip6: [u32; 4],
            pub remote_port: u32,
            pub local_port: u32,
            pub data_meta: u32,
            pub __anon_5: __anon_5,
            pub tstamp: u64,
            pub wire_len: u32,
            pub gso_segs: u32,
            pub __anon_6: __anon_6,
            pub gso_size: u32,
            pub __pad_180: [u8; 4],
        }
        #[derive(Copy, Clone)]
        #[repr(C)]
        pub union __anon_5 {
            pub flow_keys: *mut std::ffi::c_void,
        }
        impl std::fmt::Debug for __anon_5 {
            fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
                write!(f, "(???)")
            }
        }
        impl Default for __anon_5 {
            fn default() -> Self {
                Self {
                    flow_keys: std::ptr::null_mut(),
                }
            }
        }
        #[derive(Copy, Clone)]
        #[repr(C)]
        pub union __anon_6 {
            pub sk: *mut std::ffi::c_void,
        }
        impl std::fmt::Debug for __anon_6 {
            fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
                write!(f, "(???)")
            }
        }
        impl Default for __anon_6 {
            fn default() -> Self {
                Self {
                    sk: std::ptr::null_mut(),
                }
            }
        }
        #[derive(Debug, Default, Copy, Clone)]
        #[repr(C)]
        pub struct ethhdr {
            pub h_dest: [u8; 6],
            pub h_source: [u8; 6],
            pub h_proto: u16,
        }
        #[derive(Debug, Default, Copy, Clone)]
        #[repr(C)]
        pub struct iphdr {
            pub __pad_0: [u8; 1],
            pub tos: u8,
            pub tot_len: u16,
            pub id: u16,
            pub frag_off: u16,
            pub ttl: u8,
            pub protocol: u8,
            pub check: u16,
            pub saddr: u32,
            pub daddr: u32,
        }
        #[derive(Debug, Default, Copy, Clone)]
        #[repr(C)]
        pub struct ipv6hdr {
            pub __pad_0: [u8; 1],
            pub flow_lbl: [u8; 3],
            pub payload_len: u16,
            pub nexthdr: u8,
            pub hop_limit: u8,
            pub saddr: in6_addr,
            pub daddr: in6_addr,
        }
        #[derive(Debug, Default, Copy, Clone)]
        #[repr(C)]
        pub struct in6_addr {
            pub in6_u: __anon_7,
        }
        #[derive(Copy, Clone)]
        #[repr(C)]
        pub union __anon_7 {
            pub u6_addr8: [u8; 16],
            pub u6_addr16: [u16; 8],
            pub u6_addr32: [u32; 4],
        }
        impl std::fmt::Debug for __anon_7 {
            fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
                write!(f, "(???)")
            }
        }
        impl Default for __anon_7 {
            fn default() -> Self {
                Self {
                    u6_addr8: [u8::default(); 16],
                }
            }
        }
        #[derive(Debug, Default, Copy, Clone)]
        #[repr(C)]
        pub struct tcphdr {
            pub source: u16,
            pub dest: u16,
            pub seq: u32,
            pub ack_seq: u32,
            pub __pad_12: [u8; 2],
            pub window: u16,
            pub check: u16,
            pub urg_ptr: u16,
        }
        #[derive(Debug, Default, Copy, Clone)]
        #[repr(C)]
        pub struct udphdr {
            pub source: u16,
            pub dest: u16,
            pub len: u16,
            pub check: u16,
        }
        #[derive(Debug, Copy, Clone)]
        #[repr(C)]
        pub struct license {
            pub __license: [i8; 4],
        }
        #[derive(Debug, Copy, Clone)]
        #[repr(C)]
        pub struct rodata {
            pub hash_type: u8,
        }
        #[derive(Debug, Copy, Clone)]
        #[repr(C)]
        pub struct maps {
            pub mirror_map: __anon_1,
            pub filter_map: __anon_4,
        }
    }
    pub struct OpenPortmirrorSkel<'obj> {
        obj: OwnedRef<'obj, libbpf_rs::OpenObject>,
        pub maps: OpenPortmirrorMaps<'obj>,
        pub progs: OpenPortmirrorProgs<'obj>,
        pub struct_ops: StructOps,
        skel_config: libbpf_rs::__internal_skel::ObjectSkeletonConfig<'obj>,
    }

    impl<'obj> OpenSkel<'obj> for OpenPortmirrorSkel<'obj> {
        type Output = PortmirrorSkel<'obj>;
        fn load(self) -> libbpf_rs::Result<PortmirrorSkel<'obj>> {
            let skel_ptr = self.skel_config.as_libbpf_object().as_ptr();

            let ret = unsafe { libbpf_sys::bpf_object__load_skeleton(skel_ptr) };
            if ret != 0 {
                return Err(libbpf_rs::Error::from_raw_os_error(-ret));
            }

            let obj_ref = self.obj.take();
            let open_obj = std::mem::replace(obj_ref, std::mem::MaybeUninit::uninit());
            // SAFETY: `open_obj` is guaranteed to be properly
            //         initialized as it came from an `OwnedRef`.
            let obj_ptr = unsafe { open_obj.assume_init().take_ptr() };
            // SAFETY: `obj_ptr` points to a loaded object after
            //         skeleton load.
            let obj = unsafe { libbpf_rs::Object::from_ptr(obj_ptr) };
            // SAFETY: `OpenObject` and `Object` are guaranteed to
            //         have the same memory layout.
            let obj_ref = unsafe {
                std::mem::transmute::<
                    &'obj mut std::mem::MaybeUninit<libbpf_rs::OpenObject>,
                    &'obj mut std::mem::MaybeUninit<libbpf_rs::Object>,
                >(obj_ref)
            };
            let _obj = obj_ref.write(obj);
            // SAFETY: We just wrote initialized data to `obj_ref`.
            let mut obj_ref = unsafe { OwnedRef::new(obj_ref) };

            Ok(PortmirrorSkel {
                maps: unsafe { PortmirrorMaps::new(&self.skel_config, obj_ref.as_mut())? },
                progs: PortmirrorProgs::new(self.progs),
                obj: obj_ref,
                struct_ops: self.struct_ops,
                skel_config: self.skel_config,
                links: PortmirrorLinks::default(),
            })
        }

        fn open_object(&self) -> &libbpf_rs::OpenObject {
            self.obj.as_ref()
        }

        fn open_object_mut(&mut self) -> &mut libbpf_rs::OpenObject {
            self.obj.as_mut()
        }
    }
    #[derive(Default)]
    pub struct PortmirrorLinks {
        pub port_mirror: Option<libbpf_rs::Link>,
    }
    pub struct PortmirrorSkel<'obj> {
        obj: OwnedRef<'obj, libbpf_rs::Object>,
        pub maps: PortmirrorMaps<'obj>,
        pub progs: PortmirrorProgs<'obj>,
        struct_ops: StructOps,
        skel_config: libbpf_rs::__internal_skel::ObjectSkeletonConfig<'obj>,
        pub links: PortmirrorLinks,
    }

    unsafe impl Send for PortmirrorSkel<'_> {}
    unsafe impl Sync for PortmirrorSkel<'_> {}

    impl<'obj> Skel<'obj> for PortmirrorSkel<'obj> {
        fn object(&self) -> &libbpf_rs::Object {
            self.obj.as_ref()
        }

        fn object_mut(&mut self) -> &mut libbpf_rs::Object {
            self.obj.as_mut()
        }
        fn attach(&mut self) -> libbpf_rs::Result<()> {
            let skel_ptr = self.skel_config.as_libbpf_object().as_ptr();
            let ret = unsafe { libbpf_sys::bpf_object__attach_skeleton(skel_ptr) };
            if ret != 0 {
                return Err(libbpf_rs::Error::from_raw_os_error(-ret));
            }

            self.links = PortmirrorLinks {
                port_mirror: core::ptr::NonNull::new(self.skel_config.prog_link_ptr(0)?)
                    .map(|ptr| unsafe { libbpf_rs::Link::from_ptr(ptr) }),
            };

            Ok(())
        }
    }
    impl PortmirrorSkel<'_> {
        pub fn struct_ops_raw(&self) -> *const StructOps {
            &self.struct_ops
        }

        pub fn struct_ops(&self) -> &StructOps {
            &self.struct_ops
        }
    }
    const DATA: &[u8] = &[
        127, 69, 76, 70, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 247, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 160, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0,
        0, 64, 0, 11, 0, 1, 0, 0, 46, 115, 116, 114, 116, 97, 98, 0, 46, 115, 121, 109, 116, 97,
        98, 0, 116, 99, 0, 108, 105, 99, 101, 110, 115, 101, 0, 46, 114, 111, 100, 97, 116, 97, 0,
        46, 109, 97, 112, 115, 0, 46, 114, 111, 100, 97, 116, 97, 46, 115, 116, 114, 49, 46, 49, 0,
        112, 111, 114, 116, 109, 105, 114, 114, 111, 114, 46, 98, 112, 102, 46, 99, 0, 112, 111,
        114, 116, 95, 109, 105, 114, 114, 111, 114, 46, 95, 95, 95, 95, 102, 109, 116, 0, 76, 66,
        66, 48, 95, 51, 0, 76, 66, 66, 48, 95, 51, 56, 0, 76, 66, 66, 48, 95, 50, 0, 76, 66, 66,
        48, 95, 55, 0, 76, 66, 66, 48, 95, 49, 48, 0, 76, 66, 66, 48, 95, 49, 51, 0, 76, 66, 66,
        48, 95, 49, 53, 0, 112, 111, 114, 116, 95, 109, 105, 114, 114, 111, 114, 46, 95, 95, 95,
        95, 102, 109, 116, 46, 49, 0, 112, 111, 114, 116, 95, 109, 105, 114, 114, 111, 114, 46, 95,
        95, 95, 95, 102, 109, 116, 46, 50, 0, 76, 66, 66, 48, 95, 49, 55, 0, 76, 66, 66, 48, 95,
        50, 49, 0, 76, 66, 66, 48, 95, 49, 56, 0, 76, 66, 66, 48, 95, 50, 53, 0, 76, 66, 66, 48,
        95, 50, 52, 0, 76, 66, 66, 48, 95, 50, 48, 0, 76, 66, 66, 48, 95, 50, 55, 0, 76, 66, 66,
        48, 95, 50, 57, 0, 76, 66, 66, 48, 95, 51, 49, 0, 112, 111, 114, 116, 95, 109, 105, 114,
        114, 111, 114, 46, 95, 95, 95, 95, 102, 109, 116, 46, 51, 0, 112, 111, 114, 116, 95, 109,
        105, 114, 114, 111, 114, 46, 95, 95, 95, 95, 102, 109, 116, 46, 52, 0, 112, 111, 114, 116,
        95, 109, 105, 114, 114, 111, 114, 46, 95, 95, 95, 95, 102, 109, 116, 46, 53, 0, 76, 66, 66,
        48, 95, 51, 54, 0, 76, 66, 66, 48, 95, 51, 53, 0, 112, 111, 114, 116, 95, 109, 105, 114,
        114, 111, 114, 46, 95, 95, 95, 95, 102, 109, 116, 46, 55, 0, 76, 66, 66, 48, 95, 51, 55, 0,
        112, 111, 114, 116, 95, 109, 105, 114, 114, 111, 114, 46, 95, 95, 95, 95, 102, 109, 116,
        46, 54, 0, 112, 111, 114, 116, 95, 109, 105, 114, 114, 111, 114, 0, 104, 97, 115, 104, 95,
        116, 121, 112, 101, 0, 109, 105, 114, 114, 111, 114, 95, 109, 97, 112, 0, 102, 105, 108,
        116, 101, 114, 95, 109, 97, 112, 0, 95, 95, 108, 105, 99, 101, 110, 115, 101, 0, 46, 114,
        101, 108, 116, 99, 0, 46, 66, 84, 70, 0, 46, 66, 84, 70, 46, 101, 120, 116, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 4, 0, 241, 255, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 1, 0, 5, 0, 1, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0,
        0, 0, 0, 94, 0, 0, 0, 0, 0, 3, 0, 208, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0,
        0, 0, 0, 0, 3, 0, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0, 3,
        0, 160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 3, 0, 88, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 123, 0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 131, 0, 0, 0, 0, 0, 3, 0, 80, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 139, 0, 0, 0, 0, 0, 3, 0, 144, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 147, 0, 0,
        0, 1, 0, 5, 0, 15, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 169, 0, 0, 0, 1, 0, 5, 0,
        48, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 191, 0, 0, 0, 0, 0, 3, 0, 8, 4, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 199, 0, 0, 0, 0, 0, 3, 0, 192, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 207, 0, 0, 0, 0, 0, 3, 0, 88, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 215, 0, 0, 0, 0, 0, 3, 0, 56, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
        0, 0, 3, 0, 64, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0, 0, 3, 0, 16,
        5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 239, 0, 0, 0, 0, 0, 3, 0, 128, 6, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 3, 0, 168, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 3, 0, 232, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        7, 1, 0, 0, 1, 0, 5, 0, 71, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 29, 1, 0, 0, 1,
        0, 5, 0, 87, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 0, 51, 1, 0, 0, 1, 0, 5, 0, 123, 0,
        0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 3, 0, 8, 8, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 3, 0, 80, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 89, 1, 0, 0, 1, 0, 5, 0, 179, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 111, 1,
        0, 0, 0, 0, 3, 0, 64, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 1, 0, 0, 1, 0, 5,
        0, 147, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 5, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 141, 1, 0, 0, 18, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 144, 8, 0, 0, 0, 0, 0,
        0, 153, 1, 0, 0, 17, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 163, 1, 0, 0,
        17, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 174, 1, 0, 0, 17, 0, 6, 0,
        32, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 185, 1, 0, 0, 17, 0, 4, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 191, 22, 0, 0, 0, 0, 0, 0, 97, 103, 80, 0, 0, 0, 0, 0, 97,
        105, 76, 0, 0, 0, 0, 0, 24, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 113, 131, 0, 0, 0,
        0, 0, 0, 24, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183, 2, 0, 0, 14, 0, 0, 0, 133,
        0, 0, 0, 6, 0, 0, 0, 113, 129, 0, 0, 0, 0, 0, 0, 85, 1, 14, 0, 0, 0, 0, 0, 97, 97, 40, 0,
        0, 0, 0, 0, 99, 26, 200, 255, 0, 0, 0, 0, 191, 162, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 200, 255,
        255, 255, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 1, 0, 0, 0, 21, 0,
        4, 0, 0, 0, 0, 0, 97, 2, 0, 0, 0, 0, 0, 0, 191, 97, 0, 0, 0, 0, 0, 0, 183, 3, 0, 0, 0, 0,
        0, 0, 133, 0, 0, 0, 13, 0, 0, 0, 183, 0, 0, 0, 0, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 191,
        145, 0, 0, 0, 0, 0, 0, 7, 1, 0, 0, 14, 0, 0, 0, 45, 113, 251, 255, 0, 0, 0, 0, 105, 152,
        12, 0, 0, 0, 0, 0, 85, 8, 12, 0, 8, 0, 0, 0, 7, 9, 0, 0, 34, 0, 0, 0, 45, 121, 247, 255, 0,
        0, 0, 0, 113, 18, 0, 0, 0, 0, 0, 0, 103, 2, 0, 0, 2, 0, 0, 0, 87, 2, 0, 0, 60, 0, 0, 0,
        191, 25, 0, 0, 0, 0, 0, 0, 15, 41, 0, 0, 0, 0, 0, 0, 183, 2, 0, 0, 4, 0, 0, 0, 97, 20, 16,
        0, 0, 0, 0, 0, 97, 19, 12, 0, 0, 0, 0, 0, 113, 21, 9, 0, 0, 0, 0, 0, 5, 0, 21, 0, 0, 0, 0,
        0, 105, 146, 12, 0, 0, 0, 0, 0, 85, 2, 235, 255, 134, 221, 0, 0, 7, 9, 0, 0, 54, 0, 0, 0,
        45, 121, 233, 255, 0, 0, 0, 0, 183, 2, 0, 0, 8, 0, 0, 0, 191, 19, 0, 0, 0, 0, 0, 0, 15, 35,
        0, 0, 0, 0, 0, 0, 97, 50, 4, 0, 0, 0, 0, 0, 103, 2, 0, 0, 32, 0, 0, 0, 97, 20, 8, 0, 0, 0,
        0, 0, 79, 66, 0, 0, 0, 0, 0, 0, 113, 21, 6, 0, 0, 0, 0, 0, 123, 42, 240, 255, 0, 0, 0, 0,
        97, 49, 8, 0, 0, 0, 0, 0, 97, 50, 12, 0, 0, 0, 0, 0, 103, 2, 0, 0, 32, 0, 0, 0, 79, 18, 0,
        0, 0, 0, 0, 0, 123, 42, 248, 255, 0, 0, 0, 0, 183, 4, 0, 0, 0, 0, 0, 0, 183, 2, 0, 0, 6, 0,
        0, 0, 183, 3, 0, 0, 0, 0, 0, 0, 85, 5, 9, 0, 6, 0, 0, 0, 191, 145, 0, 0, 0, 0, 0, 0, 7, 1,
        0, 0, 20, 0, 0, 0, 45, 113, 212, 255, 0, 0, 0, 0, 123, 42, 176, 255, 0, 0, 0, 0, 183, 2, 0,
        0, 2, 0, 0, 0, 191, 145, 0, 0, 0, 0, 0, 0, 15, 33, 0, 0, 0, 0, 0, 0, 183, 2, 0, 0, 0, 0, 0,
        0, 5, 0, 8, 0, 0, 0, 0, 0, 191, 145, 0, 0, 0, 0, 0, 0, 7, 1, 0, 0, 8, 0, 0, 0, 45, 113,
        203, 255, 0, 0, 0, 0, 123, 42, 176, 255, 0, 0, 0, 0, 183, 2, 0, 0, 2, 0, 0, 0, 191, 145, 0,
        0, 0, 0, 0, 0, 15, 33, 0, 0, 0, 0, 0, 0, 183, 2, 0, 0, 0, 0, 0, 0, 15, 41, 0, 0, 0, 0, 0,
        0, 105, 23, 0, 0, 0, 0, 0, 0, 105, 153, 0, 0, 0, 0, 0, 0, 123, 58, 144, 255, 0, 0, 0, 0,
        220, 3, 0, 0, 32, 0, 0, 0, 123, 74, 152, 255, 0, 0, 0, 0, 220, 4, 0, 0, 32, 0, 0, 0, 24, 1,
        0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183, 2, 0, 0, 33, 0, 0, 0, 123, 90, 184, 255, 0,
        0, 0, 0, 133, 0, 0, 0, 6, 0, 0, 0, 123, 154, 160, 255, 0, 0, 0, 0, 220, 9, 0, 0, 16, 0, 0,
        0, 123, 122, 168, 255, 0, 0, 0, 0, 220, 7, 0, 0, 16, 0, 0, 0, 24, 1, 0, 0, 48, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 183, 2, 0, 0, 23, 0, 0, 0, 191, 147, 0, 0, 0, 0, 0, 0, 191, 116, 0, 0,
        0, 0, 0, 0, 133, 0, 0, 0, 6, 0, 0, 0, 183, 1, 0, 0, 0, 0, 0, 0, 115, 26, 236, 255, 0, 0, 0,
        0, 99, 26, 232, 255, 0, 0, 0, 0, 123, 26, 224, 255, 0, 0, 0, 0, 123, 26, 216, 255, 0, 0, 0,
        0, 123, 26, 208, 255, 0, 0, 0, 0, 123, 26, 200, 255, 0, 0, 0, 0, 121, 161, 176, 255, 0, 0,
        0, 0, 115, 26, 237, 255, 0, 0, 0, 0, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
        18, 0, 0, 0, 0, 0, 0, 87, 2, 0, 0, 1, 0, 0, 0, 21, 2, 11, 0, 0, 0, 0, 0, 21, 8, 1, 0, 8, 0,
        0, 0, 5, 0, 19, 0, 0, 0, 0, 0, 121, 161, 144, 255, 0, 0, 0, 0, 99, 26, 200, 255, 0, 0, 0,
        0, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 113, 17, 0, 0, 0, 0, 0, 0, 87, 1, 0, 0,
        2, 0, 0, 0, 121, 165, 184, 255, 0, 0, 0, 0, 21, 1, 71, 0, 0, 0, 0, 0, 5, 0, 7, 0, 0, 0, 0,
        0, 113, 17, 0, 0, 0, 0, 0, 0, 87, 1, 0, 0, 2, 0, 0, 0, 121, 165, 184, 255, 0, 0, 0, 0, 21,
        1, 66, 0, 0, 0, 0, 0, 191, 161, 0, 0, 0, 0, 0, 0, 7, 1, 0, 0, 216, 255, 255, 255, 85, 8,
        26, 0, 8, 0, 0, 0, 121, 161, 152, 255, 0, 0, 0, 0, 99, 26, 216, 255, 0, 0, 0, 0, 5, 0, 60,
        0, 0, 0, 0, 0, 183, 1, 0, 0, 0, 0, 0, 0, 191, 162, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 240, 255,
        255, 255, 191, 35, 0, 0, 0, 0, 0, 0, 15, 19, 0, 0, 0, 0, 0, 0, 97, 49, 4, 0, 0, 0, 0, 0,
        103, 1, 0, 0, 32, 0, 0, 0, 97, 34, 0, 0, 0, 0, 0, 0, 79, 33, 0, 0, 0, 0, 0, 0, 123, 26,
        200, 255, 0, 0, 0, 0, 97, 49, 8, 0, 0, 0, 0, 0, 97, 50, 12, 0, 0, 0, 0, 0, 103, 2, 0, 0,
        32, 0, 0, 0, 79, 18, 0, 0, 0, 0, 0, 0, 123, 42, 208, 255, 0, 0, 0, 0, 24, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 113, 17, 0, 0, 0, 0, 0, 0, 87, 1, 0, 0, 2, 0, 0, 0, 121, 165,
        184, 255, 0, 0, 0, 0, 21, 1, 39, 0, 0, 0, 0, 0, 191, 161, 0, 0, 0, 0, 0, 0, 7, 1, 0, 0,
        216, 255, 255, 255, 183, 4, 0, 0, 0, 0, 0, 0, 191, 162, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 240,
        255, 255, 255, 191, 35, 0, 0, 0, 0, 0, 0, 15, 67, 0, 0, 0, 0, 0, 0, 113, 52, 15, 0, 0, 0,
        0, 0, 115, 65, 15, 0, 0, 0, 0, 0, 113, 52, 14, 0, 0, 0, 0, 0, 115, 65, 14, 0, 0, 0, 0, 0,
        113, 52, 13, 0, 0, 0, 0, 0, 115, 65, 13, 0, 0, 0, 0, 0, 113, 52, 12, 0, 0, 0, 0, 0, 115,
        65, 12, 0, 0, 0, 0, 0, 113, 52, 11, 0, 0, 0, 0, 0, 115, 65, 11, 0, 0, 0, 0, 0, 113, 52, 10,
        0, 0, 0, 0, 0, 115, 65, 10, 0, 0, 0, 0, 0, 113, 52, 9, 0, 0, 0, 0, 0, 115, 65, 9, 0, 0, 0,
        0, 0, 113, 52, 8, 0, 0, 0, 0, 0, 115, 65, 8, 0, 0, 0, 0, 0, 113, 52, 7, 0, 0, 0, 0, 0, 115,
        65, 7, 0, 0, 0, 0, 0, 113, 52, 6, 0, 0, 0, 0, 0, 115, 65, 6, 0, 0, 0, 0, 0, 113, 52, 5, 0,
        0, 0, 0, 0, 115, 65, 5, 0, 0, 0, 0, 0, 113, 52, 4, 0, 0, 0, 0, 0, 115, 65, 4, 0, 0, 0, 0,
        0, 113, 52, 3, 0, 0, 0, 0, 0, 115, 65, 3, 0, 0, 0, 0, 0, 113, 52, 2, 0, 0, 0, 0, 0, 115,
        65, 2, 0, 0, 0, 0, 0, 113, 51, 1, 0, 0, 0, 0, 0, 115, 49, 1, 0, 0, 0, 0, 0, 113, 34, 0, 0,
        0, 0, 0, 0, 115, 33, 0, 0, 0, 0, 0, 0, 183, 8, 0, 0, 0, 0, 0, 0, 24, 1, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 113, 18, 0, 0, 0, 0, 0, 0, 87, 2, 0, 0, 4, 0, 0, 0, 183, 9, 0, 0,
        0, 0, 0, 0, 21, 2, 2, 0, 0, 0, 0, 0, 115, 90, 236, 255, 0, 0, 0, 0, 191, 89, 0, 0, 0, 0, 0,
        0, 113, 17, 0, 0, 0, 0, 0, 0, 87, 1, 0, 0, 8, 0, 0, 0, 21, 1, 2, 0, 0, 0, 0, 0, 121, 168,
        160, 255, 0, 0, 0, 0, 107, 138, 232, 255, 0, 0, 0, 0, 183, 7, 0, 0, 0, 0, 0, 0, 24, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 113, 18, 0, 0, 0, 0, 0, 0, 87, 2, 0, 0, 16, 0, 0, 0,
        21, 2, 2, 0, 0, 0, 0, 0, 121, 167, 168, 255, 0, 0, 0, 0, 107, 122, 234, 255, 0, 0, 0, 0,
        113, 19, 0, 0, 0, 0, 0, 0, 87, 3, 0, 0, 8, 0, 0, 0, 24, 1, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 183, 2, 0, 0, 16, 0, 0, 0, 133, 0, 0, 0, 6, 0, 0, 0, 97, 164, 216, 255, 0, 0,
        0, 0, 97, 163, 200, 255, 0, 0, 0, 0, 24, 1, 0, 0, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
        2, 0, 0, 36, 0, 0, 0, 191, 149, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 6, 0, 0, 0, 24, 1, 0, 0,
        123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183, 2, 0, 0, 24, 0, 0, 0, 191, 131, 0, 0, 0, 0, 0,
        0, 191, 116, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 6, 0, 0, 0, 191, 162, 0, 0, 0, 0, 0, 0, 7, 2,
        0, 0, 200, 255, 255, 255, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 1,
        0, 0, 0, 21, 0, 11, 0, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 0, 0, 85, 1, 9, 0, 1, 0, 0, 0, 97,
        97, 40, 0, 0, 0, 0, 0, 99, 26, 196, 255, 0, 0, 0, 0, 191, 162, 0, 0, 0, 0, 0, 0, 7, 2, 0,
        0, 196, 255, 255, 255, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 1, 0,
        0, 0, 21, 0, 10, 0, 0, 0, 0, 0, 5, 0, 19, 255, 0, 0, 0, 0, 24, 1, 0, 0, 179, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 183, 2, 0, 0, 32, 0, 0, 0, 183, 3, 0, 0, 193, 0, 0, 0, 183, 4, 0, 0, 0,
        0, 0, 0, 24, 5, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 6, 0, 0, 0, 5, 0,
        14, 255, 0, 0, 0, 0, 24, 1, 0, 0, 147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183, 2, 0, 0, 32,
        0, 0, 0, 183, 3, 0, 0, 190, 0, 0, 0, 183, 4, 0, 0, 0, 0, 0, 0, 24, 5, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 5, 0, 246, 255, 0, 0, 0, 0, 71, 80, 76, 0, 0, 72, 65, 83, 72, 32, 84,
        89, 80, 69, 58, 32, 37, 117, 0, 73, 80, 58, 32, 115, 97, 100, 100, 114, 61, 37, 117, 44,
        32, 100, 97, 100, 100, 114, 61, 37, 117, 44, 32, 112, 114, 111, 116, 111, 61, 37, 117, 0,
        73, 80, 58, 32, 115, 112, 111, 114, 116, 61, 37, 117, 44, 32, 100, 112, 111, 114, 116, 61,
        37, 117, 0, 83, 80, 79, 82, 84, 32, 102, 108, 97, 103, 32, 61, 32, 37, 117, 0, 75, 69, 89,
        58, 32, 115, 97, 100, 100, 114, 61, 37, 108, 117, 44, 32, 100, 97, 100, 100, 114, 61, 37,
        108, 117, 44, 32, 112, 114, 111, 116, 111, 61, 37, 117, 0, 75, 69, 89, 58, 32, 115, 112,
        111, 114, 116, 61, 37, 117, 44, 32, 100, 112, 111, 114, 116, 61, 37, 117, 0, 69, 82, 82,
        79, 82, 32, 108, 105, 110, 101, 58, 37, 100, 32, 114, 101, 116, 58, 37, 100, 32, 101, 114,
        114, 111, 114, 58, 32, 37, 115, 10, 0, 69, 82, 82, 79, 82, 32, 108, 105, 110, 101, 58, 37,
        100, 32, 114, 101, 116, 58, 37, 100, 32, 101, 114, 114, 111, 114, 58, 32, 37, 115, 10, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 78, 111, 32, 109, 105, 114, 114, 111, 114, 32, 112, 111, 114, 116, 32, 102,
        111, 114, 32, 116, 104, 105, 115, 32, 112, 107, 116, 0, 78, 111, 32, 109, 105, 114, 114,
        111, 114, 32, 97, 99, 116, 105, 111, 110, 32, 102, 111, 114, 32, 116, 104, 105, 115, 32,
        112, 107, 116, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 33, 0, 0, 0, 48,
        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 30, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 34, 0,
        0, 0, 200, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 30, 0, 0, 0, 16, 3, 0, 0, 0, 0, 0, 0, 1, 0, 0,
        0, 30, 0, 0, 0, 136, 3, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 33, 0, 0, 0, 208, 3, 0, 0, 0, 0, 0,
        0, 1, 0, 0, 0, 33, 0, 0, 0, 208, 4, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 33, 0, 0, 0, 64, 6, 0, 0,
        0, 0, 0, 0, 1, 0, 0, 0, 33, 0, 0, 0, 176, 6, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 33, 0, 0, 0,
        248, 6, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 30, 0, 0, 0, 40, 7, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 30,
        0, 0, 0, 80, 7, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 30, 0, 0, 0, 144, 7, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 35, 0, 0, 0, 224, 7, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 34, 0, 0, 0, 8, 8, 0, 0, 0, 0, 0,
        0, 1, 0, 0, 0, 30, 0, 0, 0, 48, 8, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 31, 0, 0, 0, 80, 8, 0, 0,
        0, 0, 0, 0, 1, 0, 0, 0, 30, 0, 0, 0, 120, 8, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 31, 0, 0, 0,
        159, 235, 1, 0, 24, 0, 0, 0, 0, 0, 0, 0, 20, 10, 0, 0, 20, 10, 0, 0, 120, 13, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 2, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 4, 0, 0, 0, 32, 0, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 3, 0, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 1, 4, 0,
        0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0,
        2, 0, 0, 0, 4, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 8, 0, 0, 0, 25, 0, 0, 0, 0, 0,
        0, 8, 9, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 1, 4, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 4,
        32, 0, 0, 0, 44, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 5, 0, 0, 0, 64, 0, 0, 0, 61,
        0, 0, 0, 7, 0, 0, 0, 128, 0, 0, 0, 65, 0, 0, 0, 7, 0, 0, 0, 192, 0, 0, 0, 71, 0, 0, 0, 0,
        0, 0, 14, 10, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 13, 0, 0, 0, 82, 0, 0, 0, 6, 0,
        0, 4, 38, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 128, 0, 0,
        0, 91, 0, 0, 0, 17, 0, 0, 0, 0, 1, 0, 0, 97, 0, 0, 0, 17, 0, 0, 0, 16, 1, 0, 0, 103, 0, 0,
        0, 19, 0, 0, 0, 32, 1, 0, 0, 109, 0, 0, 0, 19, 0, 0, 0, 40, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0,
        5, 16, 0, 0, 0, 120, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 126, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 2,
        0, 0, 5, 16, 0, 0, 0, 133, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 139, 0, 0, 0, 15, 0, 0, 0, 0,
        0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 8, 18, 0, 0, 0, 152, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 16,
        0, 0, 0, 167, 0, 0, 0, 0, 0, 0, 8, 20, 0, 0, 0, 172, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 8, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 19, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 4, 32, 0, 0, 0, 44, 0, 0,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 5, 0, 0, 0, 64, 0, 0, 0, 61, 0, 0, 0, 12, 0, 0, 0,
        128, 0, 0, 0, 65, 0, 0, 0, 21, 0, 0, 0, 192, 0, 0, 0, 186, 0, 0, 0, 0, 0, 0, 14, 22, 0, 0,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 25, 0, 0, 0, 197, 0, 0, 0, 32, 0, 0, 4, 184, 0, 0,
        0, 207, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 211, 0, 0, 0, 8, 0, 0, 0, 32, 0, 0, 0, 220, 0, 0,
        0, 8, 0, 0, 0, 64, 0, 0, 0, 225, 0, 0, 0, 8, 0, 0, 0, 96, 0, 0, 0, 239, 0, 0, 0, 8, 0, 0,
        0, 128, 0, 0, 0, 248, 0, 0, 0, 8, 0, 0, 0, 160, 0, 0, 0, 5, 1, 0, 0, 8, 0, 0, 0, 192, 0, 0,
        0, 14, 1, 0, 0, 8, 0, 0, 0, 224, 0, 0, 0, 25, 1, 0, 0, 8, 0, 0, 0, 0, 1, 0, 0, 34, 1, 0, 0,
        8, 0, 0, 0, 32, 1, 0, 0, 50, 1, 0, 0, 8, 0, 0, 0, 64, 1, 0, 0, 58, 1, 0, 0, 8, 0, 0, 0, 96,
        1, 0, 0, 67, 1, 0, 0, 26, 0, 0, 0, 128, 1, 0, 0, 70, 1, 0, 0, 8, 0, 0, 0, 32, 2, 0, 0, 75,
        1, 0, 0, 8, 0, 0, 0, 64, 2, 0, 0, 86, 1, 0, 0, 8, 0, 0, 0, 96, 2, 0, 0, 91, 1, 0, 0, 8, 0,
        0, 0, 128, 2, 0, 0, 100, 1, 0, 0, 8, 0, 0, 0, 160, 2, 0, 0, 108, 1, 0, 0, 8, 0, 0, 0, 192,
        2, 0, 0, 115, 1, 0, 0, 8, 0, 0, 0, 224, 2, 0, 0, 126, 1, 0, 0, 8, 0, 0, 0, 0, 3, 0, 0, 136,
        1, 0, 0, 15, 0, 0, 0, 32, 3, 0, 0, 147, 1, 0, 0, 15, 0, 0, 0, 160, 3, 0, 0, 157, 1, 0, 0,
        8, 0, 0, 0, 32, 4, 0, 0, 169, 1, 0, 0, 8, 0, 0, 0, 64, 4, 0, 0, 180, 1, 0, 0, 8, 0, 0, 0,
        96, 4, 0, 0, 0, 0, 0, 0, 27, 0, 0, 0, 128, 4, 0, 0, 190, 1, 0, 0, 29, 0, 0, 0, 192, 4, 0,
        0, 197, 1, 0, 0, 8, 0, 0, 0, 0, 5, 0, 0, 206, 1, 0, 0, 8, 0, 0, 0, 32, 5, 0, 0, 0, 0, 0, 0,
        31, 0, 0, 0, 64, 5, 0, 0, 215, 1, 0, 0, 8, 0, 0, 0, 128, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3,
        0, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 5, 8, 0, 0, 0, 224, 1,
        0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 74, 0, 0, 0, 234, 1, 0, 0, 0, 0, 0,
        8, 30, 0, 0, 0, 240, 1, 0, 0, 0, 0, 0, 1, 8, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 5,
        8, 0, 0, 0, 3, 2, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 75, 0, 0, 0, 0, 0,
        0, 0, 1, 0, 0, 13, 2, 0, 0, 0, 6, 2, 0, 0, 24, 0, 0, 0, 10, 2, 0, 0, 1, 0, 0, 12, 33, 0, 0,
        0, 22, 2, 0, 0, 3, 0, 0, 4, 14, 0, 0, 0, 29, 2, 0, 0, 36, 0, 0, 0, 0, 0, 0, 0, 36, 2, 0, 0,
        36, 0, 0, 0, 48, 0, 0, 0, 45, 2, 0, 0, 37, 0, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0,
        0, 0, 0, 20, 0, 0, 0, 4, 0, 0, 0, 6, 0, 0, 0, 53, 2, 0, 0, 0, 0, 0, 8, 17, 0, 0, 0, 60, 2,
        0, 0, 11, 0, 0, 132, 20, 0, 0, 0, 66, 2, 0, 0, 19, 0, 0, 0, 0, 0, 0, 4, 70, 2, 0, 0, 19, 0,
        0, 0, 4, 0, 0, 4, 78, 2, 0, 0, 19, 0, 0, 0, 8, 0, 0, 0, 82, 2, 0, 0, 37, 0, 0, 0, 16, 0, 0,
        0, 90, 2, 0, 0, 37, 0, 0, 0, 32, 0, 0, 0, 93, 2, 0, 0, 37, 0, 0, 0, 48, 0, 0, 0, 102, 2, 0,
        0, 19, 0, 0, 0, 64, 0, 0, 0, 239, 0, 0, 0, 19, 0, 0, 0, 72, 0, 0, 0, 106, 2, 0, 0, 39, 0,
        0, 0, 80, 0, 0, 0, 120, 0, 0, 0, 40, 0, 0, 0, 96, 0, 0, 0, 133, 0, 0, 0, 40, 0, 0, 0, 128,
        0, 0, 0, 112, 2, 0, 0, 0, 0, 0, 8, 17, 0, 0, 0, 120, 2, 0, 0, 0, 0, 0, 8, 8, 0, 0, 0, 127,
        2, 0, 0, 8, 0, 0, 132, 40, 0, 0, 0, 25, 1, 0, 0, 19, 0, 0, 0, 0, 0, 0, 4, 70, 2, 0, 0, 19,
        0, 0, 0, 4, 0, 0, 4, 135, 2, 0, 0, 42, 0, 0, 0, 8, 0, 0, 0, 144, 2, 0, 0, 37, 0, 0, 0, 32,
        0, 0, 0, 156, 2, 0, 0, 19, 0, 0, 0, 48, 0, 0, 0, 164, 2, 0, 0, 19, 0, 0, 0, 56, 0, 0, 0,
        120, 0, 0, 0, 43, 0, 0, 0, 64, 0, 0, 0, 133, 0, 0, 0, 43, 0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 0, 0, 0, 0, 19, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 174, 2, 0, 0, 1, 0, 0, 4,
        16, 0, 0, 0, 183, 2, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 5, 16, 0, 0, 0,
        189, 2, 0, 0, 45, 0, 0, 0, 0, 0, 0, 0, 198, 2, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 208, 2, 0, 0,
        47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 19, 0, 0, 0, 4, 0, 0, 0, 16,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 37, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 0, 0, 0, 0, 40, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 218, 2, 0, 0, 17, 0, 0,
        132, 20, 0, 0, 0, 225, 2, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 232, 2, 0, 0, 37, 0, 0, 0, 16, 0,
        0, 0, 237, 2, 0, 0, 40, 0, 0, 0, 32, 0, 0, 0, 241, 2, 0, 0, 40, 0, 0, 0, 64, 0, 0, 0, 249,
        2, 0, 0, 17, 0, 0, 0, 96, 0, 0, 4, 254, 2, 0, 0, 17, 0, 0, 0, 100, 0, 0, 4, 3, 3, 0, 0, 17,
        0, 0, 0, 104, 0, 0, 1, 7, 3, 0, 0, 17, 0, 0, 0, 105, 0, 0, 1, 11, 3, 0, 0, 17, 0, 0, 0,
        106, 0, 0, 1, 15, 3, 0, 0, 17, 0, 0, 0, 107, 0, 0, 1, 19, 3, 0, 0, 17, 0, 0, 0, 108, 0, 0,
        1, 23, 3, 0, 0, 17, 0, 0, 0, 109, 0, 0, 1, 27, 3, 0, 0, 17, 0, 0, 0, 110, 0, 0, 1, 31, 3,
        0, 0, 17, 0, 0, 0, 111, 0, 0, 1, 35, 3, 0, 0, 37, 0, 0, 0, 112, 0, 0, 0, 106, 2, 0, 0, 39,
        0, 0, 0, 128, 0, 0, 0, 42, 3, 0, 0, 37, 0, 0, 0, 144, 0, 0, 0, 50, 3, 0, 0, 4, 0, 0, 4, 8,
        0, 0, 0, 225, 2, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 232, 2, 0, 0, 37, 0, 0, 0, 16, 0, 0, 0,
        207, 0, 0, 0, 37, 0, 0, 0, 32, 0, 0, 0, 106, 2, 0, 0, 39, 0, 0, 0, 48, 0, 0, 0, 57, 3, 0,
        0, 0, 0, 0, 1, 1, 0, 0, 0, 8, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 50, 0, 0, 0, 4,
        0, 0, 0, 4, 0, 0, 0, 62, 3, 0, 0, 0, 0, 0, 14, 51, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 10, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 19, 0, 0, 0, 72, 3, 0, 0, 0, 0, 0, 14, 53, 0,
        0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0,
        56, 0, 0, 0, 4, 0, 0, 0, 14, 0, 0, 0, 82, 3, 0, 0, 0, 0, 0, 14, 57, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 56, 0, 0, 0, 4, 0, 0, 0, 33, 0, 0, 0, 102, 3, 0, 0, 0, 0,
        0, 14, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 56, 0, 0, 0, 4, 0, 0,
        0, 23, 0, 0, 0, 124, 3, 0, 0, 0, 0, 0, 14, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3,
        0, 0, 0, 0, 56, 0, 0, 0, 4, 0, 0, 0, 16, 0, 0, 0, 146, 3, 0, 0, 0, 0, 0, 14, 63, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 56, 0, 0, 0, 4, 0, 0, 0, 36, 0, 0, 0, 168,
        3, 0, 0, 0, 0, 0, 14, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 56, 0,
        0, 0, 4, 0, 0, 0, 24, 0, 0, 0, 190, 3, 0, 0, 0, 0, 0, 14, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 3, 0, 0, 0, 0, 56, 0, 0, 0, 4, 0, 0, 0, 32, 0, 0, 0, 212, 3, 0, 0, 0, 0, 0, 14,
        69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 50, 0, 0, 0, 4, 0, 0, 0, 28,
        0, 0, 0, 234, 3, 0, 0, 0, 0, 0, 14, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0,
        0, 0, 50, 0, 0, 0, 4, 0, 0, 0, 30, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 14, 4, 0,
        0, 0, 0, 0, 7, 0, 0, 0, 0, 95, 13, 0, 0, 1, 0, 0, 15, 4, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0,
        4, 0, 0, 0, 103, 13, 0, 0, 9, 0, 0, 15, 211, 0, 0, 0, 55, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
        58, 0, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 60, 0, 0, 0, 15, 0, 0, 0, 33, 0, 0, 0, 62, 0, 0, 0,
        48, 0, 0, 0, 23, 0, 0, 0, 64, 0, 0, 0, 71, 0, 0, 0, 16, 0, 0, 0, 66, 0, 0, 0, 87, 0, 0, 0,
        36, 0, 0, 0, 68, 0, 0, 0, 123, 0, 0, 0, 24, 0, 0, 0, 70, 0, 0, 0, 147, 0, 0, 0, 32, 0, 0,
        0, 72, 0, 0, 0, 179, 0, 0, 0, 32, 0, 0, 0, 111, 13, 0, 0, 2, 0, 0, 15, 64, 0, 0, 0, 11, 0,
        0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 23, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 0, 105, 110, 116, 0,
        95, 95, 65, 82, 82, 65, 89, 95, 83, 73, 90, 69, 95, 84, 89, 80, 69, 95, 95, 0, 95, 95, 117,
        51, 50, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0, 116, 121, 112,
        101, 0, 109, 97, 120, 95, 101, 110, 116, 114, 105, 101, 115, 0, 107, 101, 121, 0, 118, 97,
        108, 117, 101, 0, 109, 105, 114, 114, 111, 114, 95, 109, 97, 112, 0, 102, 108, 111, 119,
        95, 107, 101, 121, 0, 115, 112, 111, 114, 116, 0, 100, 112, 111, 114, 116, 0, 112, 114,
        111, 116, 111, 0, 105, 112, 95, 118, 101, 114, 115, 105, 111, 110, 0, 115, 97, 100, 100,
        114, 0, 115, 97, 100, 100, 114, 54, 0, 100, 97, 100, 100, 114, 0, 100, 97, 100, 100, 114,
        54, 0, 95, 95, 117, 49, 54, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 115, 104, 111,
        114, 116, 0, 95, 95, 117, 56, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 99, 104, 97,
        114, 0, 102, 105, 108, 116, 101, 114, 95, 109, 97, 112, 0, 95, 95, 115, 107, 95, 98, 117,
        102, 102, 0, 108, 101, 110, 0, 112, 107, 116, 95, 116, 121, 112, 101, 0, 109, 97, 114, 107,
        0, 113, 117, 101, 117, 101, 95, 109, 97, 112, 112, 105, 110, 103, 0, 112, 114, 111, 116,
        111, 99, 111, 108, 0, 118, 108, 97, 110, 95, 112, 114, 101, 115, 101, 110, 116, 0, 118,
        108, 97, 110, 95, 116, 99, 105, 0, 118, 108, 97, 110, 95, 112, 114, 111, 116, 111, 0, 112,
        114, 105, 111, 114, 105, 116, 121, 0, 105, 110, 103, 114, 101, 115, 115, 95, 105, 102, 105,
        110, 100, 101, 120, 0, 105, 102, 105, 110, 100, 101, 120, 0, 116, 99, 95, 105, 110, 100,
        101, 120, 0, 99, 98, 0, 104, 97, 115, 104, 0, 116, 99, 95, 99, 108, 97, 115, 115, 105, 100,
        0, 100, 97, 116, 97, 0, 100, 97, 116, 97, 95, 101, 110, 100, 0, 110, 97, 112, 105, 95, 105,
        100, 0, 102, 97, 109, 105, 108, 121, 0, 114, 101, 109, 111, 116, 101, 95, 105, 112, 52, 0,
        108, 111, 99, 97, 108, 95, 105, 112, 52, 0, 114, 101, 109, 111, 116, 101, 95, 105, 112, 54,
        0, 108, 111, 99, 97, 108, 95, 105, 112, 54, 0, 114, 101, 109, 111, 116, 101, 95, 112, 111,
        114, 116, 0, 108, 111, 99, 97, 108, 95, 112, 111, 114, 116, 0, 100, 97, 116, 97, 95, 109,
        101, 116, 97, 0, 116, 115, 116, 97, 109, 112, 0, 119, 105, 114, 101, 95, 108, 101, 110, 0,
        103, 115, 111, 95, 115, 101, 103, 115, 0, 103, 115, 111, 95, 115, 105, 122, 101, 0, 102,
        108, 111, 119, 95, 107, 101, 121, 115, 0, 95, 95, 117, 54, 52, 0, 117, 110, 115, 105, 103,
        110, 101, 100, 32, 108, 111, 110, 103, 32, 108, 111, 110, 103, 0, 115, 107, 0, 115, 107,
        98, 0, 112, 111, 114, 116, 95, 109, 105, 114, 114, 111, 114, 0, 101, 116, 104, 104, 100,
        114, 0, 104, 95, 100, 101, 115, 116, 0, 104, 95, 115, 111, 117, 114, 99, 101, 0, 104, 95,
        112, 114, 111, 116, 111, 0, 95, 95, 98, 101, 49, 54, 0, 105, 112, 104, 100, 114, 0, 105,
        104, 108, 0, 118, 101, 114, 115, 105, 111, 110, 0, 116, 111, 115, 0, 116, 111, 116, 95,
        108, 101, 110, 0, 105, 100, 0, 102, 114, 97, 103, 95, 111, 102, 102, 0, 116, 116, 108, 0,
        99, 104, 101, 99, 107, 0, 95, 95, 115, 117, 109, 49, 54, 0, 95, 95, 98, 101, 51, 50, 0,
        105, 112, 118, 54, 104, 100, 114, 0, 102, 108, 111, 119, 95, 108, 98, 108, 0, 112, 97, 121,
        108, 111, 97, 100, 95, 108, 101, 110, 0, 110, 101, 120, 116, 104, 100, 114, 0, 104, 111,
        112, 95, 108, 105, 109, 105, 116, 0, 105, 110, 54, 95, 97, 100, 100, 114, 0, 105, 110, 54,
        95, 117, 0, 117, 54, 95, 97, 100, 100, 114, 56, 0, 117, 54, 95, 97, 100, 100, 114, 49, 54,
        0, 117, 54, 95, 97, 100, 100, 114, 51, 50, 0, 116, 99, 112, 104, 100, 114, 0, 115, 111,
        117, 114, 99, 101, 0, 100, 101, 115, 116, 0, 115, 101, 113, 0, 97, 99, 107, 95, 115, 101,
        113, 0, 114, 101, 115, 49, 0, 100, 111, 102, 102, 0, 102, 105, 110, 0, 115, 121, 110, 0,
        114, 115, 116, 0, 112, 115, 104, 0, 97, 99, 107, 0, 117, 114, 103, 0, 101, 99, 101, 0, 99,
        119, 114, 0, 119, 105, 110, 100, 111, 119, 0, 117, 114, 103, 95, 112, 116, 114, 0, 117,
        100, 112, 104, 100, 114, 0, 99, 104, 97, 114, 0, 95, 95, 108, 105, 99, 101, 110, 115, 101,
        0, 104, 97, 115, 104, 95, 116, 121, 112, 101, 0, 112, 111, 114, 116, 95, 109, 105, 114,
        114, 111, 114, 46, 95, 95, 95, 95, 102, 109, 116, 0, 112, 111, 114, 116, 95, 109, 105, 114,
        114, 111, 114, 46, 95, 95, 95, 95, 102, 109, 116, 46, 49, 0, 112, 111, 114, 116, 95, 109,
        105, 114, 114, 111, 114, 46, 95, 95, 95, 95, 102, 109, 116, 46, 50, 0, 112, 111, 114, 116,
        95, 109, 105, 114, 114, 111, 114, 46, 95, 95, 95, 95, 102, 109, 116, 46, 51, 0, 112, 111,
        114, 116, 95, 109, 105, 114, 114, 111, 114, 46, 95, 95, 95, 95, 102, 109, 116, 46, 52, 0,
        112, 111, 114, 116, 95, 109, 105, 114, 114, 111, 114, 46, 95, 95, 95, 95, 102, 109, 116,
        46, 53, 0, 112, 111, 114, 116, 95, 109, 105, 114, 114, 111, 114, 46, 95, 95, 95, 95, 102,
        109, 116, 46, 54, 0, 112, 111, 114, 116, 95, 109, 105, 114, 114, 111, 114, 46, 95, 95, 95,
        95, 102, 109, 116, 46, 55, 0, 98, 112, 102, 95, 102, 108, 111, 119, 95, 107, 101, 121, 115,
        0, 98, 112, 102, 95, 115, 111, 99, 107, 0, 47, 114, 111, 111, 116, 47, 114, 117, 115, 116,
        47, 114, 117, 115, 116, 45, 108, 101, 97, 114, 110, 105, 110, 103, 47, 101, 98, 112, 102,
        47, 112, 111, 114, 116, 109, 105, 114, 114, 111, 114, 47, 115, 114, 99, 47, 98, 112, 102,
        47, 112, 111, 114, 116, 109, 105, 114, 114, 111, 114, 46, 98, 112, 102, 46, 99, 0, 105,
        110, 116, 32, 112, 111, 114, 116, 95, 109, 105, 114, 114, 111, 114, 40, 115, 116, 114, 117,
        99, 116, 32, 95, 95, 115, 107, 95, 98, 117, 102, 102, 32, 42, 115, 107, 98, 41, 0, 32, 32,
        32, 32, 118, 111, 105, 100, 32, 42, 100, 97, 116, 97, 95, 101, 110, 100, 32, 61, 32, 40,
        118, 111, 105, 100, 32, 42, 41, 40, 108, 111, 110, 103, 41, 115, 107, 98, 45, 62, 100, 97,
        116, 97, 95, 101, 110, 100, 59, 0, 32, 32, 32, 32, 118, 111, 105, 100, 32, 42, 100, 97,
        116, 97, 32, 61, 32, 40, 118, 111, 105, 100, 32, 42, 41, 40, 108, 111, 110, 103, 41, 115,
        107, 98, 45, 62, 100, 97, 116, 97, 59, 0, 32, 32, 32, 32, 98, 112, 102, 95, 112, 114, 105,
        110, 116, 107, 40, 34, 72, 65, 83, 72, 32, 84, 89, 80, 69, 58, 32, 37, 117, 34, 44, 32,
        104, 97, 115, 104, 95, 116, 121, 112, 101, 41, 59, 0, 32, 32, 32, 32, 105, 102, 32, 40,
        104, 97, 115, 104, 95, 116, 121, 112, 101, 32, 61, 61, 32, 72, 65, 83, 72, 95, 84, 89, 80,
        69, 95, 78, 79, 78, 69, 41, 32, 123, 0, 32, 32, 32, 32, 32, 32, 32, 32, 95, 95, 117, 51,
        50, 32, 116, 97, 112, 32, 61, 32, 115, 107, 98, 45, 62, 105, 102, 105, 110, 100, 101, 120,
        59, 0, 32, 32, 32, 32, 32, 32, 32, 32, 95, 95, 117, 51, 50, 32, 42, 109, 105, 114, 114,
        111, 114, 95, 105, 102, 105, 110, 100, 101, 120, 32, 61, 32, 98, 112, 102, 95, 109, 97,
        112, 95, 108, 111, 111, 107, 117, 112, 95, 101, 108, 101, 109, 40, 38, 109, 105, 114, 114,
        111, 114, 95, 109, 97, 112, 44, 32, 38, 116, 97, 112, 41, 59, 0, 32, 32, 32, 32, 32, 32,
        32, 32, 105, 102, 32, 40, 109, 105, 114, 114, 111, 114, 95, 105, 102, 105, 110, 100, 101,
        120, 41, 0, 125, 0, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 40, 118, 111, 105,
        100, 32, 42, 41, 40, 101, 116, 104, 32, 43, 32, 49, 41, 32, 62, 32, 100, 97, 116, 97, 95,
        101, 110, 100, 41, 0, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 101, 116, 104, 45,
        62, 104, 95, 112, 114, 111, 116, 111, 32, 61, 61, 32, 98, 112, 102, 95, 104, 116, 111, 110,
        115, 40, 69, 84, 72, 95, 80, 95, 73, 80, 41, 41, 32, 123, 0, 32, 32, 32, 32, 32, 32, 32,
        32, 32, 32, 32, 32, 105, 102, 32, 40, 40, 118, 111, 105, 100, 42, 41, 40, 105, 112, 104,
        32, 43, 32, 49, 41, 32, 62, 32, 100, 97, 116, 97, 95, 101, 110, 100, 41, 0, 32, 32, 32, 32,
        32, 32, 32, 32, 32, 32, 32, 32, 116, 114, 97, 110, 115, 95, 100, 97, 116, 97, 32, 61, 32,
        40, 118, 111, 105, 100, 42, 41, 105, 112, 104, 32, 43, 32, 40, 105, 112, 104, 45, 62, 105,
        104, 108, 32, 42, 32, 52, 41, 59, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 100,
        105, 112, 32, 61, 32, 105, 112, 104, 45, 62, 100, 97, 100, 100, 114, 59, 0, 32, 32, 32, 32,
        32, 32, 32, 32, 32, 32, 32, 32, 115, 105, 112, 32, 61, 32, 105, 112, 104, 45, 62, 115, 97,
        100, 100, 114, 59, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 112, 114, 111, 116,
        111, 32, 61, 32, 105, 112, 104, 45, 62, 112, 114, 111, 116, 111, 99, 111, 108, 59, 0, 32,
        32, 32, 32, 32, 32, 32, 32, 125, 32, 101, 108, 115, 101, 32, 105, 102, 32, 40, 101, 116,
        104, 45, 62, 104, 95, 112, 114, 111, 116, 111, 32, 61, 61, 32, 98, 112, 102, 95, 104, 116,
        111, 110, 115, 40, 69, 84, 72, 95, 80, 95, 73, 80, 86, 54, 41, 41, 32, 123, 0, 32, 32, 32,
        32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 40, 118, 111, 105, 100, 32, 42, 41,
        40, 105, 112, 54, 104, 32, 43, 32, 49, 41, 32, 62, 32, 100, 97, 116, 97, 95, 101, 110, 100,
        41, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 115, 105, 112, 54, 32, 61, 32, 105,
        112, 54, 104, 45, 62, 115, 97, 100, 100, 114, 59, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32,
        32, 32, 32, 112, 114, 111, 116, 111, 32, 61, 32, 105, 112, 54, 104, 45, 62, 110, 101, 120,
        116, 104, 100, 114, 59, 0, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 112, 114, 111,
        116, 111, 32, 61, 61, 32, 73, 80, 80, 82, 79, 84, 79, 95, 84, 67, 80, 41, 32, 123, 0, 32,
        32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 40, 118, 111, 105, 100, 32,
        42, 41, 40, 116, 114, 97, 110, 115, 95, 100, 97, 116, 97, 32, 43, 32, 115, 105, 122, 101,
        111, 102, 40, 42, 116, 99, 112, 104, 41, 41, 32, 62, 32, 100, 97, 116, 97, 95, 101, 110,
        100, 41, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 40, 118, 111,
        105, 100, 32, 42, 41, 40, 116, 114, 97, 110, 115, 95, 100, 97, 116, 97, 32, 43, 32, 115,
        105, 122, 101, 111, 102, 40, 42, 117, 100, 112, 104, 41, 41, 32, 62, 32, 100, 97, 116, 97,
        95, 101, 110, 100, 41, 0, 32, 32, 32, 32, 32, 32, 32, 32, 95, 95, 98, 101, 49, 54, 32, 115,
        112, 111, 114, 116, 32, 61, 32, 48, 44, 32, 100, 112, 111, 114, 116, 32, 61, 32, 48, 59, 0,
        32, 32, 32, 32, 32, 32, 32, 32, 98, 112, 102, 95, 112, 114, 105, 110, 116, 107, 40, 34, 73,
        80, 58, 32, 115, 97, 100, 100, 114, 61, 37, 117, 44, 32, 100, 97, 100, 100, 114, 61, 37,
        117, 44, 32, 112, 114, 111, 116, 111, 61, 37, 117, 34, 44, 0, 32, 32, 32, 32, 32, 32, 32,
        32, 98, 112, 102, 95, 112, 114, 105, 110, 116, 107, 40, 34, 73, 80, 58, 32, 115, 112, 111,
        114, 116, 61, 37, 117, 44, 32, 100, 112, 111, 114, 116, 61, 37, 117, 34, 44, 0, 32, 32, 32,
        32, 32, 32, 32, 32, 115, 116, 114, 117, 99, 116, 32, 102, 108, 111, 119, 95, 107, 101, 121,
        32, 112, 107, 116, 95, 107, 101, 121, 32, 61, 32, 123, 0, 32, 32, 32, 32, 32, 32, 32, 32,
        105, 102, 32, 40, 104, 97, 115, 104, 95, 116, 121, 112, 101, 32, 38, 32, 72, 65, 83, 72,
        95, 84, 89, 80, 69, 95, 83, 82, 67, 41, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
        105, 102, 32, 40, 105, 112, 95, 118, 101, 114, 115, 105, 111, 110, 32, 61, 61, 32, 52, 41,
        32, 123, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 112, 107, 116,
        95, 107, 101, 121, 46, 115, 97, 100, 100, 114, 32, 61, 32, 115, 105, 112, 59, 0, 32, 32,
        32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 104, 97, 115, 104, 95, 116, 121, 112, 101, 32,
        38, 32, 72, 65, 83, 72, 95, 84, 89, 80, 69, 95, 68, 83, 84, 41, 0, 32, 32, 32, 32, 32, 32,
        32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 112, 107, 116, 95, 107, 101, 121, 46, 100, 97, 100,
        100, 114, 32, 61, 32, 100, 105, 112, 59, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
        32, 32, 32, 32, 95, 95, 98, 117, 105, 108, 116, 105, 110, 95, 109, 101, 109, 99, 112, 121,
        40, 112, 107, 116, 95, 107, 101, 121, 46, 115, 97, 100, 100, 114, 54, 44, 32, 115, 105,
        112, 54, 46, 105, 110, 54, 95, 117, 46, 117, 54, 95, 97, 100, 100, 114, 56, 44, 32, 49, 54,
        41, 59, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 95, 95, 98, 117,
        105, 108, 116, 105, 110, 95, 109, 101, 109, 99, 112, 121, 40, 112, 107, 116, 95, 107, 101,
        121, 46, 100, 97, 100, 100, 114, 54, 44, 32, 115, 105, 112, 54, 46, 105, 110, 54, 95, 117,
        46, 117, 54, 95, 97, 100, 100, 114, 56, 44, 32, 49, 54, 41, 59, 0, 32, 32, 32, 32, 32, 32,
        32, 32, 105, 102, 32, 40, 104, 97, 115, 104, 95, 116, 121, 112, 101, 32, 38, 32, 72, 65,
        83, 72, 95, 84, 89, 80, 69, 95, 80, 82, 79, 84, 79, 41, 0, 32, 32, 32, 32, 32, 32, 32, 32,
        32, 32, 32, 32, 112, 107, 116, 95, 107, 101, 121, 46, 112, 114, 111, 116, 111, 32, 61, 32,
        112, 114, 111, 116, 111, 59, 0, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 104, 97,
        115, 104, 95, 116, 121, 112, 101, 32, 38, 32, 72, 65, 83, 72, 95, 84, 89, 80, 69, 95, 83,
        80, 79, 82, 84, 41, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 112, 107, 116, 95,
        107, 101, 121, 46, 115, 112, 111, 114, 116, 32, 61, 32, 115, 112, 111, 114, 116, 59, 0, 32,
        32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 104, 97, 115, 104, 95, 116, 121, 112, 101,
        32, 38, 32, 72, 65, 83, 72, 95, 84, 89, 80, 69, 95, 68, 80, 79, 82, 84, 41, 0, 32, 32, 32,
        32, 32, 32, 32, 32, 32, 32, 32, 32, 112, 107, 116, 95, 107, 101, 121, 46, 100, 112, 111,
        114, 116, 32, 61, 32, 100, 112, 111, 114, 116, 59, 0, 32, 32, 32, 32, 32, 32, 32, 32, 98,
        112, 102, 95, 112, 114, 105, 110, 116, 107, 40, 34, 83, 80, 79, 82, 84, 32, 102, 108, 97,
        103, 32, 61, 32, 37, 117, 34, 44, 32, 104, 97, 115, 104, 95, 116, 121, 112, 101, 32, 38,
        32, 72, 65, 83, 72, 95, 84, 89, 80, 69, 95, 83, 80, 79, 82, 84, 41, 59, 0, 32, 32, 32, 32,
        32, 32, 32, 32, 98, 112, 102, 95, 112, 114, 105, 110, 116, 107, 40, 34, 75, 69, 89, 58, 32,
        115, 97, 100, 100, 114, 61, 37, 108, 117, 44, 32, 100, 97, 100, 100, 114, 61, 37, 108, 117,
        44, 32, 112, 114, 111, 116, 111, 61, 37, 117, 34, 44, 0, 32, 32, 32, 32, 32, 32, 32, 32,
        98, 112, 102, 95, 112, 114, 105, 110, 116, 107, 40, 34, 75, 69, 89, 58, 32, 115, 112, 111,
        114, 116, 61, 37, 117, 44, 32, 100, 112, 111, 114, 116, 61, 37, 117, 34, 44, 0, 32, 32, 32,
        32, 32, 32, 32, 32, 95, 95, 117, 56, 32, 42, 97, 99, 116, 105, 111, 110, 32, 61, 32, 98,
        112, 102, 95, 109, 97, 112, 95, 108, 111, 111, 107, 117, 112, 95, 101, 108, 101, 109, 40,
        38, 102, 105, 108, 116, 101, 114, 95, 109, 97, 112, 44, 32, 38, 112, 107, 116, 95, 107,
        101, 121, 41, 59, 0, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 97, 99, 116, 105,
        111, 110, 32, 38, 38, 32, 42, 97, 99, 116, 105, 111, 110, 32, 61, 61, 32, 77, 73, 82, 82,
        79, 82, 41, 32, 123, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 95, 95, 117, 51,
        50, 32, 116, 97, 112, 32, 61, 32, 115, 107, 98, 45, 62, 105, 102, 105, 110, 100, 101, 120,
        59, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 95, 95, 117, 51, 50, 32, 42, 109,
        105, 114, 114, 111, 114, 95, 105, 102, 105, 110, 100, 101, 120, 32, 61, 32, 98, 112, 102,
        95, 109, 97, 112, 95, 108, 111, 111, 107, 117, 112, 95, 101, 108, 101, 109, 40, 38, 109,
        105, 114, 114, 111, 114, 95, 109, 97, 112, 44, 32, 38, 116, 97, 112, 41, 59, 0, 32, 32, 32,
        32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 109, 105, 114, 114, 111, 114, 95,
        105, 102, 105, 110, 100, 101, 120, 41, 32, 123, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
        32, 32, 108, 111, 103, 95, 101, 114, 114, 40, 48, 44, 32, 34, 78, 111, 32, 109, 105, 114,
        114, 111, 114, 32, 97, 99, 116, 105, 111, 110, 32, 102, 111, 114, 32, 116, 104, 105, 115,
        32, 112, 107, 116, 34, 41, 59, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
        32, 32, 108, 111, 103, 95, 101, 114, 114, 40, 48, 44, 32, 34, 78, 111, 32, 109, 105, 114,
        114, 111, 114, 32, 112, 111, 114, 116, 32, 102, 111, 114, 32, 116, 104, 105, 115, 32, 112,
        107, 116, 34, 41, 59, 0, 48, 58, 49, 54, 0, 48, 58, 49, 53, 0, 48, 58, 49, 48, 0, 48, 58,
        50, 0, 48, 58, 48, 0, 48, 58, 57, 0, 48, 58, 55, 0, 48, 58, 54, 0, 48, 58, 52, 0, 48, 58,
        49, 0, 48, 58, 48, 58, 48, 0, 108, 105, 99, 101, 110, 115, 101, 0, 46, 114, 111, 100, 97,
        116, 97, 0, 46, 109, 97, 112, 115, 0, 116, 99, 0, 0, 0, 0, 0, 159, 235, 1, 0, 32, 0, 0, 0,
        0, 0, 0, 0, 20, 0, 0, 0, 20, 0, 0, 0, 188, 5, 0, 0, 208, 5, 0, 0, 92, 1, 0, 0, 8, 0, 0, 0,
        117, 13, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 16, 0, 0, 0, 117, 13, 0, 0, 91, 0, 0,
        0, 0, 0, 0, 0, 23, 4, 0, 0, 89, 4, 0, 0, 0, 68, 1, 0, 8, 0, 0, 0, 23, 4, 0, 0, 128, 4, 0,
        0, 41, 80, 1, 0, 16, 0, 0, 0, 23, 4, 0, 0, 178, 4, 0, 0, 37, 76, 1, 0, 24, 0, 0, 0, 23, 4,
        0, 0, 220, 4, 0, 0, 5, 88, 1, 0, 80, 0, 0, 0, 23, 4, 0, 0, 8, 5, 0, 0, 9, 92, 1, 0, 88, 0,
        0, 0, 23, 4, 0, 0, 8, 5, 0, 0, 9, 92, 1, 0, 96, 0, 0, 0, 23, 4, 0, 0, 47, 5, 0, 0, 26, 100,
        1, 0, 104, 0, 0, 0, 23, 4, 0, 0, 47, 5, 0, 0, 15, 100, 1, 0, 120, 0, 0, 0, 23, 4, 0, 0, 47,
        5, 0, 0, 26, 100, 1, 0, 128, 0, 0, 0, 23, 4, 0, 0, 81, 5, 0, 0, 33, 104, 1, 0, 152, 0, 0,
        0, 23, 4, 0, 0, 153, 5, 0, 0, 13, 108, 1, 0, 160, 0, 0, 0, 23, 4, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 192, 0, 0, 0, 23, 4, 0, 0, 181, 5, 0, 0, 1, 24, 3, 0, 208, 0, 0, 0, 23, 4, 0, 0, 183,
        5, 0, 0, 26, 132, 1, 0, 224, 0, 0, 0, 23, 4, 0, 0, 183, 5, 0, 0, 13, 132, 1, 0, 232, 0, 0,
        0, 23, 4, 0, 0, 225, 5, 0, 0, 18, 172, 1, 0, 240, 0, 0, 0, 23, 4, 0, 0, 225, 5, 0, 0, 13,
        172, 1, 0, 248, 0, 0, 0, 23, 4, 0, 0, 20, 6, 0, 0, 29, 180, 1, 0, 0, 1, 0, 0, 23, 4, 0, 0,
        20, 6, 0, 0, 17, 180, 1, 0, 8, 1, 0, 0, 23, 4, 0, 0, 65, 6, 0, 0, 45, 196, 1, 0, 16, 1, 0,
        0, 23, 4, 0, 0, 65, 6, 0, 0, 49, 196, 1, 0, 32, 1, 0, 0, 23, 4, 0, 0, 65, 6, 0, 0, 37, 196,
        1, 0, 56, 1, 0, 0, 23, 4, 0, 0, 119, 6, 0, 0, 24, 204, 1, 0, 64, 1, 0, 0, 23, 4, 0, 0, 149,
        6, 0, 0, 24, 200, 1, 0, 72, 1, 0, 0, 23, 4, 0, 0, 179, 6, 0, 0, 26, 192, 1, 0, 88, 1, 0, 0,
        23, 4, 0, 0, 214, 6, 0, 0, 25, 216, 1, 0, 96, 1, 0, 0, 23, 4, 0, 0, 214, 6, 0, 0, 20, 216,
        1, 0, 104, 1, 0, 0, 23, 4, 0, 0, 18, 7, 0, 0, 31, 224, 1, 0, 112, 1, 0, 0, 23, 4, 0, 0, 18,
        7, 0, 0, 17, 224, 1, 0, 144, 1, 0, 0, 23, 4, 0, 0, 65, 7, 0, 0, 26, 244, 1, 0, 176, 1, 0,
        0, 23, 4, 0, 0, 97, 7, 0, 0, 27, 236, 1, 0, 184, 1, 0, 0, 23, 4, 0, 0, 65, 7, 0, 0, 26,
        244, 1, 0, 0, 2, 0, 0, 23, 4, 0, 0, 132, 7, 0, 0, 13, 20, 2, 0, 8, 2, 0, 0, 23, 4, 0, 0,
        168, 7, 0, 0, 37, 32, 2, 0, 24, 2, 0, 0, 23, 4, 0, 0, 168, 7, 0, 0, 17, 32, 2, 0, 80, 2, 0,
        0, 23, 4, 0, 0, 233, 7, 0, 0, 37, 64, 2, 0, 96, 2, 0, 0, 23, 4, 0, 0, 233, 7, 0, 0, 17, 64,
        2, 0, 152, 2, 0, 0, 23, 4, 0, 0, 42, 8, 0, 0, 27, 156, 1, 0, 160, 2, 0, 0, 23, 4, 0, 0, 42,
        8, 0, 0, 16, 156, 1, 0, 176, 2, 0, 0, 23, 4, 0, 0, 79, 8, 0, 0, 9, 92, 2, 0, 248, 2, 0, 0,
        23, 4, 0, 0, 134, 8, 0, 0, 9, 100, 2, 0, 72, 3, 0, 0, 23, 4, 0, 0, 179, 8, 0, 0, 25, 108,
        2, 0, 120, 3, 0, 0, 23, 4, 0, 0, 179, 8, 0, 0, 35, 108, 2, 0, 136, 3, 0, 0, 23, 4, 0, 0,
        215, 8, 0, 0, 13, 124, 2, 0, 160, 3, 0, 0, 23, 4, 0, 0, 215, 8, 0, 0, 23, 124, 2, 0, 168,
        3, 0, 0, 23, 4, 0, 0, 215, 8, 0, 0, 13, 124, 2, 0, 176, 3, 0, 0, 23, 4, 0, 0, 254, 8, 0, 0,
        17, 128, 2, 0, 192, 3, 0, 0, 23, 4, 0, 0, 33, 9, 0, 0, 31, 132, 2, 0, 208, 3, 0, 0, 23, 4,
        0, 0, 70, 9, 0, 0, 13, 148, 2, 0, 232, 3, 0, 0, 23, 4, 0, 0, 70, 9, 0, 0, 23, 148, 2, 0,
        248, 3, 0, 0, 23, 4, 0, 0, 70, 9, 0, 0, 13, 148, 2, 0, 8, 4, 0, 0, 23, 4, 0, 0, 70, 9, 0,
        0, 13, 148, 2, 0, 16, 4, 0, 0, 23, 4, 0, 0, 70, 9, 0, 0, 23, 148, 2, 0, 32, 4, 0, 0, 23, 4,
        0, 0, 70, 9, 0, 0, 13, 148, 2, 0, 40, 4, 0, 0, 23, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 4,
        0, 0, 23, 4, 0, 0, 254, 8, 0, 0, 17, 152, 2, 0, 64, 4, 0, 0, 23, 4, 0, 0, 109, 9, 0, 0, 31,
        156, 2, 0, 104, 4, 0, 0, 23, 4, 0, 0, 146, 9, 0, 0, 17, 140, 2, 0, 208, 4, 0, 0, 23, 4, 0,
        0, 70, 9, 0, 0, 13, 148, 2, 0, 232, 4, 0, 0, 23, 4, 0, 0, 70, 9, 0, 0, 23, 148, 2, 0, 248,
        4, 0, 0, 23, 4, 0, 0, 70, 9, 0, 0, 13, 148, 2, 0, 0, 5, 0, 0, 23, 4, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 32, 5, 0, 0, 23, 4, 0, 0, 221, 9, 0, 0, 17, 164, 2, 0, 64, 6, 0, 0, 23, 4, 0, 0,
        40, 10, 0, 0, 13, 172, 2, 0, 88, 6, 0, 0, 23, 4, 0, 0, 40, 10, 0, 0, 23, 172, 2, 0, 104, 6,
        0, 0, 23, 4, 0, 0, 40, 10, 0, 0, 13, 172, 2, 0, 112, 6, 0, 0, 23, 4, 0, 0, 81, 10, 0, 0,
        27, 176, 2, 0, 128, 6, 0, 0, 23, 4, 0, 0, 116, 10, 0, 0, 13, 180, 2, 0, 136, 6, 0, 0, 23,
        4, 0, 0, 116, 10, 0, 0, 23, 180, 2, 0, 144, 6, 0, 0, 23, 4, 0, 0, 116, 10, 0, 0, 13, 180,
        2, 0, 160, 6, 0, 0, 23, 4, 0, 0, 157, 10, 0, 0, 27, 184, 2, 0, 176, 6, 0, 0, 23, 4, 0, 0,
        192, 10, 0, 0, 13, 188, 2, 0, 200, 6, 0, 0, 23, 4, 0, 0, 192, 10, 0, 0, 23, 188, 2, 0, 208,
        6, 0, 0, 23, 4, 0, 0, 192, 10, 0, 0, 13, 188, 2, 0, 224, 6, 0, 0, 23, 4, 0, 0, 233, 10, 0,
        0, 27, 192, 2, 0, 232, 6, 0, 0, 23, 4, 0, 0, 12, 11, 0, 0, 9, 200, 2, 0, 24, 7, 0, 0, 23,
        4, 0, 0, 80, 11, 0, 0, 9, 204, 2, 0, 80, 7, 0, 0, 23, 4, 0, 0, 138, 11, 0, 0, 9, 212, 2, 0,
        136, 7, 0, 0, 23, 4, 0, 0, 12, 11, 0, 0, 9, 200, 2, 0, 144, 7, 0, 0, 23, 4, 0, 0, 184, 11,
        0, 0, 24, 220, 2, 0, 168, 7, 0, 0, 23, 4, 0, 0, 251, 11, 0, 0, 20, 224, 2, 0, 176, 7, 0, 0,
        23, 4, 0, 0, 251, 11, 0, 0, 23, 224, 2, 0, 184, 7, 0, 0, 23, 4, 0, 0, 251, 11, 0, 0, 13,
        224, 2, 0, 192, 7, 0, 0, 23, 4, 0, 0, 38, 12, 0, 0, 30, 228, 2, 0, 200, 7, 0, 0, 23, 4, 0,
        0, 38, 12, 0, 0, 19, 228, 2, 0, 216, 7, 0, 0, 23, 4, 0, 0, 38, 12, 0, 0, 30, 228, 2, 0,
        224, 7, 0, 0, 23, 4, 0, 0, 76, 12, 0, 0, 37, 232, 2, 0, 248, 7, 0, 0, 23, 4, 0, 0, 152, 12,
        0, 0, 17, 236, 2, 0, 8, 8, 0, 0, 23, 4, 0, 0, 186, 12, 0, 0, 13, 4, 3, 0, 64, 8, 0, 0, 23,
        4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 8, 0, 0, 23, 4, 0, 0, 243, 12, 0, 0, 17, 248, 2, 0,
        16, 0, 0, 0, 117, 13, 0, 0, 21, 0, 0, 0, 8, 0, 0, 0, 25, 0, 0, 0, 46, 13, 0, 0, 0, 0, 0, 0,
        16, 0, 0, 0, 25, 0, 0, 0, 51, 13, 0, 0, 0, 0, 0, 0, 96, 0, 0, 0, 25, 0, 0, 0, 56, 13, 0, 0,
        0, 0, 0, 0, 232, 0, 0, 0, 35, 0, 0, 0, 61, 13, 0, 0, 0, 0, 0, 0, 8, 1, 0, 0, 38, 0, 0, 0,
        65, 13, 0, 0, 0, 0, 0, 0, 56, 1, 0, 0, 38, 0, 0, 0, 56, 13, 0, 0, 0, 0, 0, 0, 64, 1, 0, 0,
        38, 0, 0, 0, 69, 13, 0, 0, 0, 0, 0, 0, 72, 1, 0, 0, 38, 0, 0, 0, 73, 13, 0, 0, 0, 0, 0, 0,
        88, 1, 0, 0, 35, 0, 0, 0, 61, 13, 0, 0, 0, 0, 0, 0, 120, 1, 0, 0, 41, 0, 0, 0, 77, 13, 0,
        0, 0, 0, 0, 0, 160, 1, 0, 0, 41, 0, 0, 0, 77, 13, 0, 0, 0, 0, 0, 0, 176, 1, 0, 0, 41, 0, 0,
        0, 81, 13, 0, 0, 0, 0, 0, 0, 40, 2, 0, 0, 48, 0, 0, 0, 85, 13, 0, 0, 0, 0, 0, 0, 64, 2, 0,
        0, 48, 0, 0, 0, 65, 13, 0, 0, 0, 0, 0, 0, 112, 2, 0, 0, 49, 0, 0, 0, 85, 13, 0, 0, 0, 0, 0,
        0, 136, 2, 0, 0, 49, 0, 0, 0, 65, 13, 0, 0, 0, 0, 0, 0, 88, 4, 0, 0, 43, 0, 0, 0, 89, 13,
        0, 0, 0, 0, 0, 0, 144, 4, 0, 0, 43, 0, 0, 0, 89, 13, 0, 0, 0, 0, 0, 0, 16, 5, 0, 0, 43, 0,
        0, 0, 89, 13, 0, 0, 0, 0, 0, 0, 40, 6, 0, 0, 43, 0, 0, 0, 89, 13, 0, 0, 0, 0, 0, 0, 192, 7,
        0, 0, 25, 0, 0, 0, 56, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0,
        0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 216, 1, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0,
        0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 2, 0, 0, 0, 0, 0, 0,
        120, 3, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0,
        0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 144, 5,
        0, 0, 0, 0, 0, 0, 144, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 32, 14, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 36, 14, 0, 0, 0, 0, 0, 0, 211, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 14, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 0, 0, 0, 1, 0, 0, 0,
        50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 15, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 195, 1, 0,
        0, 9, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120, 15, 0, 0, 0, 0, 0, 0,
        48, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0,
        0, 0, 202, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 16, 0,
        0, 0, 0, 0, 0, 164, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 207, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 80, 40, 0, 0, 0, 0, 0, 0, 76, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ];
}
